[project]
name = "Quart"
version = "0.20.0"
description = "A Python ASGI web framework with the same API as Flask"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "pgjones", email = "philip.graham.jones@googlemail.com"}]
maintainers = [{name = "Pallets", email = "contact@palletsprojects.com"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    "aiofiles",
    "blinker>=1.6",
    "click>=8.0",
    "flask>=3.0",
    "hypercorn>=0.11.2",
    "importlib-metadata; python_version < '3.10'",
    "itsdangerous",
    "jinja2",
    "markupsafe",
    "typing-extensions; python_version < '3.11'",
    "werkzeug>=3.0",
]

[project.urls]
Donate = "https://palletsprojects.com/donate"
Documentation = "https://quart.palletsprojects.com/"
Changes = "https://quart.palletsprojects.com/en/latest/changes.html"
Source = "https://github.com/pallets/quart/"
Chat = "https://discord.gg/pallets"

[project.optional-dependencies]
dotenv = ["python-dotenv"]

[project.scripts]
quart = "quart.cli:main"

[build-system]
requires = ["flit-core<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "quart"

[tool.pytest.ini_options]
addopts = "--no-cov-on-fail --showlocals --strict-markers"
asyncio_default_fixture_loop_scope = "session"
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["quart", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.mypy]
python_version = "3.9"
files = ["src/quart", "tests"]
show_error_codes = true
pretty = true
strict = true
# TODO fully satisfy strict mode and remove these customizations
allow_redefinition = true
disallow_any_generics = false
disallow_untyped_calls = false
implicit_reexport = true
no_implicit_optional = true
strict_optional = false
warn_return_any = false

[tool.pyright]
pythonVersion = "3.9"
include = ["src/quart", "tests"]
typeCheckingMode = "basic"

[tool.ruff]
src = ["src"]
fix = true
show-fixes = true
output-format = "full"

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "E",  # pycodestyle error
    "F",  # pyflakes
    "FA",  # flake8-future-annotations
    "I",  # isort
    "N",  # pep8-naming
    "UP",  # pyupgrade
    "W",  # pycodestyle warning
]

[tool.ruff.lint.isort]
force-single-line = true
order-by-type = false
