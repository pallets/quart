[tool.poetry]
name = "Quart"
version = "0.16.1"
description = "A Python ASGI web microframework with the same API as Flask"
authors = ["pgjones <philip.graham.jones@googlemail.com>"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
include = ["src/quart_auth/py.typed"]
license = "MIT"
readme = "README.rst"
repository = "https://gitlab.com/pgjones/quart/"
documentation = "https://pgjones.gitlab.io/quart/"

[tool.poetry.dependencies]
python = ">=3.7"
aiofiles = "*"
blinker = "*"
click = "*"
hypercorn = ">=0.11.2"
importlib_metadata = { version = "*", python = "<3.8" }
itsdangerous = "*"
jinja2 = "*"
python-dotenv = { version = "*", optional = true }
toml = "*"
typing_extensions = { version = "*", python = "<3.8" }
werkzeug = ">=2.0.0"

[tool.poetry.dev-dependencies]
hypothesis = "*"
mock = "*"
pytest = "*"
pytest-asyncio = "*"

[tool.poetry.scripts]
quart = "quart.cli:main"

[tool.poetry.extras]
dotenv = ["python-dotenv"]
ipython = ["ipython"]

[tool.black]
line-length = 100
target-version = ["py37"]

[tool.isort]
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = "quart, tests"
line_length = 100
multi_line_output = 3
no_lines_before = "LOCALFOLDER"
order_by_type = false
reverse_relative = true

[tool.mypy]
allow_redefinition = true
disallow_any_generics = false
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_defs = true
implicit_reexport = true
no_implicit_optional = true
show_error_codes = true
strict = true
strict_equality = true
strict_optional = false
warn_redundant_casts = true
warn_return_any = false
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "--no-cov-on-fail --showlocals --strict-markers"
testpaths = ["tests"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
